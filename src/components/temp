import React from 'react';
import './App.css';

class Counter extends React.Component {
  render() {
    return (
      <div className="Counter">
        <button onClick={() => this.props.decrementCount(this.props.id)}>-</button>
        <span>{this.props.count}</span>
        <button onClick={() => this.props.incrementCount(this.props.id)}>+</button>
      </div>
    );
  }
}

class CounterGroup extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      numCounters: 0,
      counters: {},
    };
  }

  handleInputChange = (event) => {
    const value = event.target.value;
    if (/^\d+$/.test(value) || value === '') {
      let counters = {};
      for (let i = 0; i < parseInt(value, 10); i++) {
        counters[i] = 1;
      }
      this.setState({ numCounters: parseInt(value, 10), counters });
    }
  }

  incrementCount = (id) => {
    this.setState(prevState => ({
      counters: {
        ...prevState.counters,
        [id]: prevState.counters[id] + 1,
      },
    }));
  }

  decrementCount = (id) => {
    this.setState(prevState => ({
      counters: {
        ...prevState.counters,
        [id]: prevState.counters[id] - 1,
      },
    }));
  }

  renderCounters = () => {
    let counters = [];
    for (let i = 0; i < this.state.numCounters; i++) {
      counters.push(
        <Counter
          key={i}
          id={i}
          count={this.state.counters[i]}
          incrementCount={this.incrementCount}
          decrementCount={this.decrementCount}
        />
      );
    }
    return counters;
  }

  render() {
    const sum = Object.values(this.state.counters).reduce((a, b) => a + b, 0);
    return (
      <div className="CounterGroup">
        <input
          type="text"
          onChange={this.handleInputChange}
          placeholder="Enter number of counters"
        />
        {this.renderCounters()}
        <p>Total Sum: {sum}</p>
      </div>
    );
  }
}

export default CounterGroup;